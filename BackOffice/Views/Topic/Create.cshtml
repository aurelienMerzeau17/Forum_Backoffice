@model BackOffice.Models.TopicModel

@{
    ViewBag.Title = "Create";
}
@{
    string connect = string.Empty;
    if (Session["Connect"] == null)
    {
        connect = "Disconnect";
    }
    else
    {

        connect = Session["Connect"].ToString();

    }
}
@if (/*Request.IsAuthenticated*/connect.Equals("Connect"))
{
<h2>Create</h2>


using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TopicModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.Label("Catégorie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryChoice", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sujet_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Description du Topic", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescriptifTopic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescriptifTopic, "", new { @class = "text-danger" })
            </div>
        </div>

        
                @Html.Hidden("DateCrea", DateTime.Now.ToUniversalTime())
               

        <div class="form-group">
            @Html.LabelFor(model => model.Resolu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Resolu)
                    @Html.ValidationMessageFor(model => model.Resolu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        
                @Html.Hidden("UserId", 138)
               

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
}
else
{
    Response.Redirect("/Account/Login");
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
